Session 02

git fetch copies all the upstream stuff locally but does not merge, then user must specify git merge to merge local and upstream versions

the pull request will always point to the latest version of repo

git will not track directories, only files

touch readme.txt will create a file called readme.txt

git add makes git “pay attention” to the file (track in repo)

changing a file after staging it will mean the changes won’t appear in the commit - the file must be staged again post-changes

don’t use eval or exec
- these evaluate python code as a text string
- advice is to not use these because it can enable injection of malicious code (e.g. in web app user input)

assert (expression|function) is (value|boolean)

////Lightning Talks////

SQLAlchemy

1) establish dataset
db = create_engine(‘adatabase.db’)
# open connection to database
# the resulting object has methods specific to the type of database
metadata = BoundMetaData(db)
# create an object that knows what the columns of the data are, what types of data they contain, etc.
# used to recreate analogous data structures in python
user = Table(‘users’, metadata, autolaod=True)
# figure out automatically what the table looks like

2) building sql statements
main idea: create sql statement objects and operate on those with python modules
e.g.
users.select()
users.insert()
join(table1, table2).select()
outerjoin(table1, table2).select()

3) map objects to the database
create an empty class to serve as a data class and map data tables onto empty data classes which take on correct column names and types
create a session object to keep track of data classes
select (load) data from database into data class
flush the session to push changes to the database

//////////////////

print(‘string’, end=‘’) make the end an empty string instead of a newline
